services:
  frontend:
    build:
      context: ./front/
      dockerfile: Dockerfile
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./back/Paper.Api/Paper.Api/
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=paperdb
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 30

  nginx-proxy:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      frontend:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 30

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_LOG_LEVEL=DEBUG
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
    command: "start-dev"
    ports:
      - "8085:8080"
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 20

  keycloak-setup:
    image: curlimages/curl:latest
    volumes:
      - ./keycloak-setup/entrypoint.sh:/entrypoint.sh
    networks:
      - app-network
    entrypoint: ["/bin/sh", "/entrypoint.sh"]




  db:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=paperdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
